#!/bin/bash

set -eu

scriptDir="$(dirname "$0")"
rootDir="$scriptDir/.."
readonly ENVIRONMENT_VAGRANT=vagrant
readonly ENVIRONMENT_PRODUCTION=production

# This script orchestrates deployments via ansible. Fresh artifacts are always built and then deployed.

function usage() {
  echo "usage: $0 [options]"
  echo ""
  echo "Examples:"
  echo "$0 --environment $ENVIRONMENT_VAGRANT"
  echo "$0 --environment $ENVIRONMENT_VAGRANT --diff --dry-run --verbose"
  echo ""
  echo "[options]"
  echo "  --environment, --env [$ENVIRONMENT_VAGRANT|$ENVIRONMENT_PRODUCTION]"
  echo "      The target environment for the deployment."
  echo "         $ENVIRONMENT_VAGRANT is an environment that can be launched locally via a VM"
  echo "  --tags, -t [ansible tags]"
  echo "      Defaults to the empty set"
  echo "      Any tags that should be passed to ansible"
  echo "  --diff, -d"
  echo "      Ansible reports line-diffs of what has changed"
  echo "  --dry-run"
  echo "      Sets ansible to 'check' mode, no actual changes are made. Useful with '--diff'"
  echo "      This option can cause false positive failures if one action depends on a previous"
  echo "  --verbose, -v"
  echo "      Shows ansible verbose output, gives more detail about what has changed."
  echo "  --limit, -l"
  echo "      Limits which servers we deploy to, only these servers will be updated."
  echo "      Specify server hostnames, and/or hostgroup names"
  exit 1
}


if [[ $# -eq 0 ]]; then
  usage
fi


DIFF_ARG=""
DRY_RUN_ARG=""
ENVIRONMENT=""
TAGS_ARG=""
VERBOSE_ARG=""
LIMIT_ARG=""

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -env|--env|--environment)
      ENVIRONMENT="$2"
      if [[ "$ENVIRONMENT" != "$ENVIRONMENT_PRODUCTION" \
         && "$ENVIRONMENT" != "$ENVIRONMENT_VAGRANT" ]]; then
        echo "Error, invalid value for --environment:  $ENVIRONMENT"
        usage
      fi
      shift # past argument
      shift # past value
      ;;
    --tags|-t)
      TAGS_ARG="--tags $2"
      shift # past argument
      shift # past value
      ;;
    --diff|-d|--d)
      DIFF_ARG="--diff"
      shift
      ;;
    --dry-run)
      DRY_RUN_ARG="--check"
      shift
      ;;
    --verbose|-v)
      VERBOSE_ARG="-v"
      shift
      ;;
    --limit|-l)
      LIMIT_ARG="--limit $2"
      shift
      shift
      ;;
    *)
      echo "Error, unknown option: $1"
      exit 1
      ;;
  esac
done

if [ -z "$ENVIRONMENT" ]; then
  echo "Missing arg: --environment"
  usage
fi

# Run deployment
set -x
ANSIBLE_CONFIG="$scriptDir/ansible/ansible.cfg" ansible-playbook \
   --inventory "$scriptDir/ansible/inventory/$ENVIRONMENT" $DRY_RUN_ARG $LIMIT_ARG \
   $TAGS_ARG $DIFF_ARG $VERBOSE_ARG "$scriptDir/ansible/site.yml"
set +x
